#  /etc/rsyslog.conf  Configuration file for rsyslog.
#
#     For more information see
#     /usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf


#################
#### MODULES ####
#################

#$ModLoad imuxsock # provides support for local system logging
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
#$ModLoad immark  # provides --MARK-- message capability

$KLogPath /proc/kmsg

# provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514
$UDPServerAddress 127.0.0.1

# provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514


###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Filter duplicated messages
$RepeatedMsgReduction on

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$CreateDirs on
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup syslog
$RepeatedMsgReduction on

#certificate files - just CA for a client
#$DefaultNetstreamDriverCAFile /etc/rsyslog/ca.pem

## set up the action  (put SSL first before *.* message forwarding)
#$DefaultNetstreamDriver gtls # use gtls netstream driver
#$ActionSendStreamDriverMode 1 # require TLS for the connection
#$ActionSendStreamDriverAuthMode anon # server is NOT authenticated

# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
# check website: http://www.rsyslog.com/doc-rsyslog_reliable_forwarding.html
# this reliable log forwarding function is different with RELP protocol which is more reliable


$ModLoad imuxsock               # local message reception
$WorkDirectory /var/log/rsyslog # default location for work (spool) files
$ActionQueueType LinkedList     # run asynchronously
$ActionQueueFileName rsyslog    # set file name, also enables disk mode
$ActionQueueMaxDiskSpace 1g     # 1gb space limit (use as much as possible)
$ActionResumeRetryCount 3       # retries if host is down, for infinite use -1
$ActionQueueSaveOnShutdown on   # save in-memory data if rsyslog shuts down

# send (all) messages to the syslog server using TCP
#TODO This hostname needs to be changed from the default (rsyslog.myhostname.com)
*.*              @@rsyslog.myhostname.com:10514

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf

# Template for service name-based log files
$template ServiceLogfile,"/var/log/%programname%.log"

# Route messages from defined remote hosts into log files based on
# the name of the remote host. The parts of this rule are:
# - ":" indicates that this is a property-based filter (traditionally
#   the filter would be a severity/facility based selector)
# - "hostname" names the property whose value should be examined
# - "," a simple separator
# - "ereregex" indicates the compare-operation, in this case that the
#   property value should be compared against an extended regular
#   expression (another compare-operation is "isequal")
# - "," a simple separator
# - "(host1|host2|...)" the regular expression to compare against
# - "?" indicates that the action is a dynamic filename (as opposed
#   to static files that must be specified starting with a "/")
# - "RemoteHostLogfile" is the name of the template that must be
#   evaluated to get the actual filename
# - "&" on a new line indicates that for the same filter rule there
#   is another action coming up
# - "~" is the "discard" action, i.e. the message is not processed
#   any further
# :hostname, ereregex, "(thor|twig|nori)" ?RemoteHostLogfile
# & ~

# Route messages from defined services into log files based on
# the name of the service. See above for a detailed discussion of
# the parts of this rule.
:programname, ereregex, "(<%=rsyslog_client_regexed_programs.join("|")%>)" ?ServiceLogfile
& ~

# If secondary senders fail, report to local file
$ActionExecOnlyWhenPreviousIsSuspended on
&                /var/log/rsyslog-fail.log

